;;-*-Lisp-*-
(in-package goal)

;; name: mods-common.gc
;; name in dgo: main
;; dgos: GAME, ENGINE

(define racer? #f) 
(define flutflut? #f)

(defun enable-unlockZoomers-20-cells ()
(and
(-> *randomizer-settings* checkpoint-randomizer?)))

(defun enable-skip-samos-intro ()
(and
(-> *randomizer-settings* checkpoint-randomizer?)))

(defun enable-citadel-cutscene-skips ()
;;relies on modifcations in collectibles.gc
;;relies on modifcations in assistant-citadel.gc
(and
(-> *randomizer-settings* checkpoint-randomizer?)))

(defun enable-geyser-spawn-game-start ()
(and
(-> *randomizer-settings* checkpoint-randomizer?)))

(defun enable-no-powercell-cutscenes ()
;;depends on modifiations in snow-obs (crash)
(or
   (and 
        (not (and 
            (-> *randomizer-settings* checkpoint-randomizer?) 
            (-> *randomizer-settings* warp-on-cell?) 
         ))
         (-> *mods-settings* mod-powercellcutscenes?)
      )
    ))

(defun enable-unlock-citadel-door-no-cells ()
;;depends on modifcations in racer.gc
(or
(and 
          (-> *randomizer-settings* checkpoint-randomizer?)
          (or 
            (= (-> *level* level 0 name) 'lavatube) 
            (= (-> *level* level 0 name) 'citadel)
          )
        )
))

(defun enable-pelican-explode-punch ()
;;Depends on modifcations in pelican.gc
(if 
  (and (-> *randomizer-settings* checkpoint-randomizer?) (-> *randomizer-settings* warp-on-cell?))
  (return #t)
)
#f
)



(defun unlock-citadel-door-no-cells()
;;Unlock citadel door if the randomizer is on. Invis wall is removed elsewhere (racer.gc). Softlocks bad.
(if (entity-by-name "citb-iris-door-21")
  ;; rather than trigger the warp gate switch at end of lava tube with:
  ;;    (close-specific-task! (game-task village4-button) (task-status need-hint))
  ;;
  ;; we break the link between the citadel door's state and the warp gate switch, 
  ;; and then manually open the door
  (let ((citb-iris-door-21 (the eco-door (-> (entity-by-name "citb-iris-door-21") extra process))))
    (set! (-> citb-iris-door-21 state-actor) #f)
    (set! (-> citb-iris-door-21 locked) #f) 
  )
))

(defun unlockZoomers-20-cells ()
;;Skip the keira zoomer cutscenes if the player has 20 or more cells, or if they have collected the end cell.
(if (or (>= (-> *game-info* fuel) 20) (task-complete? *game-info* (game-task firecanyon-end)) )
(begin
  (close-specific-task! (game-task firecanyon-assistant) (task-status need-reward-speech))
))
(if (or (>= (-> *game-info* fuel) 20) (task-complete? *game-info* (game-task lavatube-end)) )
(begin
  (close-specific-task! (game-task lavatube-start) (task-status need-reward-speech))
))
)

(defun skip-samos-intro ()
;;Skip the samos cutscenes if the randomizer is on. Cutscenes bad.
(close-specific-task! (game-task intro) (task-status need-resolution))
(close-specific-task! (game-task beach-ecorocks) (task-status need-introduction))
)

(defun change-geyser-spawn-game-start ()
(if (string= (symbol->string (-> (level-get-target-inside *level*) name)) "training")
(set! (-> *game-info* current-continue) (the-as continue-point (get-continue-by-name *game-info* "game-start")))
(none)))


(defun mods-common-run-each-frame ()
;;Update global variables
(set! racer? (aif *target* (case (-> it next-state name) (
                                      ('target-racing
                                       'target-racing-bounce
                                       'target-racing-death
                                       'target-racing-falling
                                       'target-racing-grab
                                       'target-racing-hit
                                       'target-racing-jump
                                       'target-racing-smack
                                       'target-racing-start) #t))))
(set! flutflut? (aif *target* (case (-> it next-state name) (
                                      ('target-flut-air-attack
                                       'target-flut-air-attack-hit-ground
                                       'target-flut-double-jump
                                       'target-flut-falling
                                       'target-flut-grab
                                       'target-flut-hit
                                       'target-flut-hit-ground
                                       'target-flut-jump
                                       'target-flut-running-attack
                                       'target-flut-stance
                                       'target-flut-start
                                       'target-flut-walk) #t))))
;;end

;;Enable/disable things
(if (enable-unlockZoomers-20-cells)
(unlockZoomers-20-cells))

(if (enable-skip-samos-intro)
(skip-samos-intro))

(if (enable-geyser-spawn-game-start)
(change-geyser-spawn-game-start))

(if (enable-unlock-citadel-door-no-cells)
(begin
(close-specific-task! (game-task citadel-sage-green) (task-status need-resolution))
(unlock-citadel-door-no-cells))
)

(none)
)

;; Target color functions
(defun draw-xyz ((jak target) (x float) (y float) (z float))
  (set! (-> jak draw color-mult x) x)
  (set! (-> jak draw color-mult y) y)
  (set! (-> jak draw color-mult z) z)
)
(defun draw-normal ((jak target))
  (draw-xyz jak 1.0 1.0 1.0)
)
(defun draw-white ((jak target))
  (draw-xyz jak 10.0 10.0 10.0)
)
(defun draw-black ((jak target))
  (draw-xyz jak 0.0 0.0 0.0)
)
(defun draw-red ((jak target))
  (draw-xyz jak 3.0 0.0 0.0)
)
(defun draw-green ((jak target))
  (draw-xyz jak 0.0 3.0 0.0)
)
(defun draw-blue ((jak target))
  (draw-xyz jak 0.0 0.0 3.0)
)
(defun draw-yellow ((jak target))
  (draw-xyz jak 3.0 3.0 0.0)
)
(defun draw-pink ((jak target))
  (draw-xyz jak 3.0 0.0 3.0)
)
(defun draw-light-blue ((jak target))
  (draw-xyz jak 0.0 3.0 3.0)
)
;;End target color functions